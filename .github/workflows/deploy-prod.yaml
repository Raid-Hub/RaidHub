name: Deploy to Production

env:
    VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
    VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
    workflow_dispatch:

jobs:
    deploy:
        name: Deploy to Production
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Download dependencies
              run: |
                  yarn install
                  yarn prisma generate

            - name: Install Turso CLI
              env:
                  TURSO_INSTALL_SKIP_SIGNUP: true
              run: |
                  curl -sSfL https://get.tur.so/install.sh | bash
                  echo "PATH=$PATH:/home/runner/.turso" >> $GITHUB_ENV

            - name: Bump Version
              run: |
                  VERSION=$(./bump.sh)
                  echo "Version: $VERSION"
                  echo "VERSION=$VERSION" >> $GITHUB_ENV
                  git add package.json
                  git add public/manifest.json
                  git commit -m "Bump $VERSION"

            - name: Install Turso CLI
              env:
                  TURSO_INSTALL_SKIP_SIGNUP: true
              run: |
                  curl -sSfL https://get.tur.so/install.sh | bash
                  echo "PATH=$PATH:/home/runner/.turso" >> $GITHUB_ENV

            - name: Pull Vercel Environment Information
              run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

            - name: Apply Database Migrations
              env:
                  TURSO_DATABASE_NAME: ${{ secrets.TURSO_PROD_DATABASE_NAME }}
                  TURSO_API_TOKEN: ${{ secrets.TURSO_API_TOKEN }}
              run: ./.github/scripts/turso-migrate.sh

            - name: Build Project Artifacts
              run: |
                  yarn prisma generate
                  vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

            - name: Deploy Project Artifacts to Vercel
              run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

            - name: Create Tag
              run: |
                  git tag -a v$${{ env.VERSION }} main -m "$(git log --pretty=format:"%s" main..HEAD)"
                  git push origin
                  git push --tags
