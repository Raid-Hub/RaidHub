name: Deploy to Production

env:
    VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
    VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    pscale_base_directory: .pscale/cli-helper-scripts

on:
    workflow_dispatch:

jobs:
    Deploy-to-Production:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: ./${{ github.event.repository.name }}
        steps:
            - name: Fail if branch is not main
              if: github.ref != 'refs/heads/main'
              run: |
                  echo "This workflow should not be triggered on a branch other than main"
                  exit 1

            - name: Check if user is a repo admin
              working-directory: ./
              run: |
                  if [[ $(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/collaborators/${{ github.actor }}/permission" | jq -r '.permission') != "admin" ]]; then
                    echo "Only repo admins can run this action."
                    exit 1
                  fi

            - name: Set up SSH
              working-directory: ./
              run: |
                  mkdir -p ~/.ssh
                  echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
                  chmod 600 ~/.ssh/id_ed25519
                  eval "$(ssh-agent -s)"
                  ssh-add ~/.ssh/id_ed25519

            - name: Config
              working-directory: ./
              run: |
                  git config --global credential.helper store
                  git config --global user.email "github-actions@raidhub.io"
                  git config --global user.name "GitHub Actions"

            - name: Clone Repo
              working-directory: ./
              run: |
                  git clone git@github.com:Raid-Hub/${{ github.event.repository.name }}.git

            - name: Yarn install
              run: yarn install

            - name: Bump Version
              run: |
                  VERSION=$(./bump.sh)
                  echo "Version: $VERSION"
                  echo "VERSION=$VERSION" >> $GITHUB_ENV
                  git add package.json
                  git add public/manifest.json
                  git commit -m "Bump $VERSION"

            - name: Install Turso CLI
              env:
                  TURSO_INSTALL_SKIP_SIGNUP: true
              run: curl -sSfL https://get.tur.so/install.sh | bash

            - name: Apply Database Migrations
              timeout-minutes: 4
              env:
                  TURSO_API_TOKEN: ${{ secrets.TURSO_API_TOKEN }}
                  TURSO_INSTALL_SKIP_SIGNUP: true
              run: ./.github/scripts/turso-migrate.sh

            - name: Upload Migration Artifact
              uses: actions/upload-artifact@v3
              with:
                  name: migration
                  path: ./script.sql

            - name: Pull Vercel Environment Information
              run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

            - name: Build Project Artifacts
              run: |
                  yarn prisma generate
                  vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

            - name: Deploy Project Artifacts to Vercel
              run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

            - name: Create Tag
              run: |
                  git tag -a v$${{ env.VERSION }} main -m "$(git log --pretty=format:"%s" main..HEAD)"
                  git push origin
                  git push --tags
