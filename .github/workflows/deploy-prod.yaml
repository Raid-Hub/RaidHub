name: Deploy to Production

on:
    push:
    workflow_dispatch:

jobs:
    Deploy-to-Production:
        runs-on: ubuntu-latest
        # if: |
        #     startsWith(github.ref, 'refs/heads/main')
        defaults:
            run:
                working-directory: ./${{ github.event.repository.name }}
        steps:
            - name: Check if user is a repo admin
              working-directory: ./
              run: |
                  if [[ $(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/collaborators/${{ github.actor }}/permission" | jq -r '.permission') != "admin" ]]; then
                    echo "Only repo admins can run this action."
                    exit 1
                  fi
            - name: Set up SSH
              working-directory: ./
              run: |
                  mkdir -p ~/.ssh
                  echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
                  chmod 600 ~/.ssh/id_ed25519
                  eval "$(ssh-agent -s)"
                  ssh-add ~/.ssh/id_ed25519

            - name: Config
              working-directory: ./
              run: |
                  git config --global credential.helper store
                  git config --global user.email "github-actions@raidhub.app"
                  git config --global user.name "GitHub Actions"

            - name: Clone Repo
              working-directory: ./
              run: git clone git@github.com:Raid-Hub/RaidHub-Website.git

            - name: Bump Version
              run: |
                  git fetch origin
                  VERSION=$(./bump.sh)
                  echo "Version: $VERSION"
                  echo "VERSION=$VERSION" >> $GITHUB_ENV
                  git add package.json
                  git add public/manifest.json
                  git commit -m "Bump $VERSION"

            - name: Install Vercel CLI
              run: npm install --global vercel@latest

            - name: Pull Vercel Environment Information
              run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

            - name: Build Project Artifacts
              run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

            - name: Deploy Project Artifacts to Vercel
              run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

            - name: Create Tag
              run: |
                  git tag -a v$VERSION main -m "$(git log --pretty=format:"%s" develop..HEAD)"
                  git push origin
                  git push --tags
