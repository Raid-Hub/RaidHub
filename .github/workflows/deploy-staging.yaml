name: Deploy to Staging
env:
    VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
    VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    pscale_base_directory: .pscale
on:
    push:
        branches:
            - planetscale-stuff
jobs:
    paths-filter:
        name: Check for schema changes
        runs-on: ubuntu-latest
        outputs:
            prismaChanges: ${{ steps.filter.outputs.prisma }}
        steps:
            - uses: actions/checkout@v2
            - uses: dorny/paths-filter@v2
              id: filter
              with:
                  filters: |
                      prisma:
                        - 'prisma/**'

    deploy-staging:
        name: Deploy staging
        runs-on: ubuntu-latest
        needs: paths-filter
        env:
            BUNGIE_API_KEY: ${{ secrets.STAGING_BUNGIE_API_KEY }}
            BUNGIE_CLIENT_ID: ${{ secrets.STAGING_BUNGIE_CLIENT_ID }}
            BUNGIE_CLIENT_SECRET: ${{ secrets.STAGING_BUNGIE_CLIENT_SECRET }}
            NEXTAUTH_URL: "https://staging.raidhub.app"
            APP_ENV: "staging"
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Was there schema changes?
              env:
                  HAS_SCHEMA_CHANGES: needs.paths-filter.outputs.prismaChanges
              run: echo $HAS_SCHEMA_CHANGES

            - name: Connect to database branch
              id: create-db-branch-and-connection
              timeout-minutes: 3
              env:
                  PLANETSCALE_SERVICE_TOKEN_ID: ${{secrets.PLANETSCALE_SERVICE_TOKEN_ID}}
                  PLANETSCALE_SERVICE_TOKEN: ${{secrets.PLANETSCALE_SERVICE_TOKEN}}
                  BRANCH_NAME: ${{secrets.PLANETSCALE_STAGING_BRANCH}}
                  ORG_NAME: ${{secrets.PLANETSCALE_ORG_NAME}}
                  DB_NAME: ${{secrets.PLANETSCALE_DB_NAME}}
                  GITHUB_USER: ${{github.actor}}
                  HAS_SCHEMA_CHANGES: needs.paths-filter.outputs.prismaChanges
              working-directory: ${{env.pscale_base_directory}}/cli-helper-scripts/
              run: ./create-db-branch-and-connection.sh "$BRANCH_NAME"

            - name: Install Vercel CLI
              run: npm install --global vercel@latest

            - name: Pull Vercel Environment Information
              run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

            - name: Build Project Artifacts
              run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

            - name: Deploy Project Artifacts to Vercel
              run: echo "URL=$(vercel deploy  --token=${{ secrets.VERCEL_TOKEN }} --prebuilt -e BUNGIE_API_KEY=$BUNGIE_API_KEY -e BUNGIE_CLIENT_ID=$BUNGIE_CLIENT_ID -e BUNGIE_CLIENT_SECRET=$BUNGIE_CLIENT_SECRET -e DATABASE_URL=${{ env.DATABASE_URL }} -e NEXTAUTH_URL=$NEXTAUTH_URL -e APP_ENV=$APP_ENV --prebuilt)" >> $GITHUB_ENV

            - name: Set Alias
              run: vercel alias set $URL staging.raidhub.app --scope "raid-hub" --token=${{ secrets.VERCEL_TOKEN }}
