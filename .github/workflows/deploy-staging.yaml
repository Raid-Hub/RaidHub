name: Deploy to Staging
env:
    VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
    VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    pscale_base_directory: .pscale
on:
    push:
        branches:
            - main
concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    paths-filter:
        name: Check for schema changes
        runs-on: ubuntu-latest
        outputs:
            prismaChanges: ${{ steps.filter.outputs.prisma }}
        steps:
            - uses: actions/checkout@v4
            - uses: dorny/paths-filter@v2
              id: filter
              with:
                  filters: |
                      prisma:
                        - 'prisma/schema.prisma'

    deploy-staging:
        name: Deploy staging
        runs-on: ubuntu-latest
        needs: paths-filter
        env:
            BUNGIE_API_KEY: ${{ secrets.STAGING_BUNGIE_API_KEY }}
            BUNGIE_CLIENT_ID: ${{ secrets.STAGING_BUNGIE_CLIENT_ID }}
            BUNGIE_CLIENT_SECRET: ${{ secrets.STAGING_BUNGIE_CLIENT_SECRET }}
            APP_ENV: "staging"
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Download dependencies
              run: |
                  yarn install
                  yarn prisma generate

              # TODO: Create database branch and connection

            - name: Pull Vercel Environment Information
              run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

            - name: Build Project Artifacts
              run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

            - name: Deploy Project Artifacts to Vercel
              run: echo "URL=$(vercel deploy --token=${{ secrets.VERCEL_TOKEN }} --prebuilt -e DATABASE_URL=${{ env.DATABASE_URL }})" >> $GITHUB_ENV

            - name: Set Alias
              run: vercel alias set $URL staging.raidhub.io --scope "raidhub" --token=${{ secrets.VERCEL_TOKEN }}
