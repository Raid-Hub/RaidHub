name: Version Bump and Release

on:
    push:
        branches:
            - version-pipeline
            # - develop
    schedule:
        - cron: "0 8 * * 1"
    workflow_dispatch:

jobs:
    bump-and-release:
        runs-on: ubuntu-latest
        # if: |
        #     startsWith(github.ref, 'refs/heads/develop')
        steps:
            - name: Check if user is a repo admin
              run: |
                  if [[ $(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/collaborators/${{ github.actor }}/permission" | jq -r '.permission') != "admin" ]]; then
                    echo "Only repo admins can run this action."
                    exit 1
                  fi
            - name: Set up SSH
              run: |
                  mkdir -p ~/.ssh
                  echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
                  chmod 600 ~/.ssh/id_ed25519
                  eval "$(ssh-agent -s)"
                  ssh-add ~/.ssh/id_ed25519

            - name: Go
              run: |
                  git config --global credential.helper store
                  git config --global user.email "release_bot@raidhub.app"
                  git config --global user.name "Your Name"
                  git clone git@github.com:Raid-Hub/RaidHub-Website.git
                  cd RaidHub-Website
                  git fetch origin
                  git checkout version-pipeline
                  VERSION=$(./bump.sh)
                  echo "Version: $VERSION"
                  git add package.json
                  git add public/manifest.json
                  git commit -m "Release version bump $VERSION"
                  # git push origin develop
                  git checkout test-main
                  git merge --squash -X theirs version-pipeline
                  git commit -m "Release v$VERSION"
                  git reset --hard HEAD
                  git push origin test-main
                  git checkout main
                  git tag -a v$VERSION main -m "$(git log --pretty=format:"%s" develop --not main)"
                  git push --tags
