// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@unique([provider, userId])
  @@index([userId])
}

model User {
  id                        String    @id @default(cuid())
  name                      String?
  destiny_membership_id     String?
  destiny_membership_type   Int?
  discord_username          String?
  twitch_username           String?
  bungie_username           String?
  twitter_username          String?
  image                     String?
  bungie_access_token       String?   @db.Text
  bungie_access_expires_at  DateTime? @default(now())
  bungie_refresh_token      String?   @db.Text
  bungie_refresh_expires_at DateTime? @default(now())
  email                     String?   @unique
  accounts                  Account[]
  sessions                  Session[]
  vanity                    Vanity?

  @@unique([destiny_membership_id, destiny_membership_type])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  expires      DateTime @default(now())
  userId       String
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model Vanity {
  id                    String  @id @default(cuid())
  string                String  @unique
  destinyMembershipId   String
  destinyMembershipType Int
  userId                String? @unique
  user                  User?   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model lol {
  id                    String  @id @default(cuid())
  name String
  numb Int
}
